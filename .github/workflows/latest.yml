name: 'latest'

on:
  push:
    branches: [ 'main' ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        id: install-dependencies
        run: make composer

      - name: PHPCS checker
        id: php-codesniffer
        run: make lint

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#fetch-jft'
        if: failure()

  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      S3_BUCKET: archives.bmlt.app
      S3_KEY: fetch-jft
      BUILD_DIR: build
      DIST_DIR_S3: dist/s3
      PLUGIN: "fetch-jft"
      MAINFILE: "fetch-jft.php"
    needs: [ lint ]
    steps:
      - uses: actions/checkout@v2
        id: code-checkout

      - name: Prepare to deploy
        run: |
          export FILENAME=fetch-jft-build-${GITHUB_RUN_NUMBER}-${GITHUB_SHA}
          export ZIP_FILENAME=$FILENAME.zip
          echo "ZIP_FILENAME=${ZIP_FILENAME}" >> $GITHUB_ENV
          git archive --format=zip --output=${ZIP_FILENAME} ${GITHUB_SHA}
          mkdir $BUILD_DIR && mv $ZIP_FILENAME $BUILD_DIR/
          mkdir -p $DIST_DIR_S3 && cp $BUILD_DIR/$ZIP_FILENAME $DIST_DIR_S3/$ZIP_FILENAME

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions/gh-ci-s3-artifact
          role-session-name: gh-actions-jft
          aws-region: us-east-1

      - name: copy artifact to s3
        run: |
          aws s3 cp $DIST_DIR_S3/$ZIP_FILENAME s3://$S3_BUCKET/$S3_KEY/$ZIP_FILENAME

      - name: Publish Release to Latest WP
        id: publish_latest
        uses: bmlt-enabled/wordpress-releases-github-action@v1
        with:
          file: ${{ env.DIST_DIR_S3 }}/${{ env.ZIP_FILENAME }}
          s3_key: ${{ env.S3_KEY }}
          aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#fetch-jft'
        if: failure()
